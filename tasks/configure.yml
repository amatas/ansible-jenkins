---

- name: Create Jenkins auxiliary directory for holding JARs, scripts, etc
  file:
    path: "{{ jenkins_aux_dir }}"
    state: directory
    owner: root
    group: root

- name: Extract the jenkins_cli jarfile
  command: unzip -oj /usr/lib/jenkins/jenkins.war WEB-INF/jenkins-cli.jar -d /opt/jenkins/

- name: Configure Jenkins startup
  template:
    src: sysconfig.j2
    dest: /etc/sysconfig/jenkins
  when: "{{ not is_docker }}"

- name: Disable first start Wizard
  copy:
    dest: /var/lib/jenkins/jenkins.install.UpgradeWizard.state
    src: jenkins.install.UpgradeWizard.state
    owner: "{{ jenkins_user  }}"

- name: Create Jenkins init groovy scripts
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"

- name: Update init scripts
  template:
    src: '{{ item }}.j2'
    dest: "{{ jenkins_home }}/init.groovy.d/a{{ item }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"
  with_items:
    - 01_plugins.groovy
    - 02_users.groovy
    - 03-credentials.groovy
    - 04-configuration.groovy
    - 05-nodes.groovy
    - 99-clean_scripts.groovy


- name: Create Jenkins init groovy scripts
  file:
    path: "{{ jenkins_home }}/secrets"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_user }}"

- name: Set slave to master security
  template:
    src: "slave-to-master-security-kill-switch.j2"
    dest: "{{ jenkins_home }}/secrets/slave-to-master-security-kill-switch"
    backup: no
    owner: "{{ jenkins_user }}"

